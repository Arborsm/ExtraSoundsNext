pluginManagement {
    repositories {
        maven { url = "https://maven.fabricmc.net/" }
        maven { url = "https://maven.architectury.dev/" }
        maven { url = "https://maven.minecraftforge.net/" }
        maven { url = "https://maven.quiltmc.org/repository/release" }
        maven {
            name = 'NeoForged'
            url = 'https://maven.neoforged.net/releases'
        }
        gradlePluginPortal()
    }
}

dependencyResolutionManagement {
    repositories {
        mavenCentral()
    }
    versionCatalogs {
        // Minecraft Version
        def minecraftVersion = "1.21"

        def jeiVersion = "19.8.2.99"
        def reiVersion = "16.0.754"
        def emiVersion = "1.1.12"
        //def forgeVersion = "47.2.23"

        // Libs
        def quiltMappingsVersion = "3"  // https://lambdaurora.dev/tools/import_quilt.html
        def parchmentVersion = "2024.07.28" // https://parchmentmc.org/docs/getting-started
        def shadowVersion = "7.1.2"
        def architecturyPluginVersion = "3.4-SNAPSHOT"
        def architecturyLoomVersion = "1.7-SNAPSHOT"
        def vineFlowerVersion = "1.11.0"
        def macheteVersion = "1.+"

        common {
            //version("forgeShortVersion", forgeVersion)
            //def minecraftForge = version("minecratfForge", "${minecraftVersion}-${forgeVersion}")
            //library("minecraftForge", "net.minecraftforge", "forge").versionRef(minecraftForge)

            def jei = version("jei", jeiVersion)
            library("jei-neoforge", "mezz.jei", "jei-${minecraftVersion}-neoforge").versionRef(jei)
            library("jei-fabric", "mezz.jei", "jei-${minecraftVersion}-fabric").versionRef(jei)

            def rei = version("rei", reiVersion)
            library("rei-neoforge", "me.shedaniel", "RoughlyEnoughItems-neoforge").versionRef(rei)
            library("rei-fabric", "me.shedaniel", "RoughlyEnoughItems-fabric").versionRef(rei)

            def emi = version("emi", emiVersion + "+" + minecraftVersion)
            library("emi-neoforge", "dev.emi", "emi-neoforge").versionRef(emi)
            library("emi-fabric", "dev.emi", "emi-fabric").versionRef(emi)
        }

        libs {
            version("quiltMappings", quiltMappingsVersion)
            version("parchment", parchmentVersion)

            def minecraft = version("minecraft", minecraftVersion)
            library("minecraft", "com.mojang", "minecraft").versionRef(minecraft)

            def shadow = version("shadow", shadowVersion)
            plugin("shadow", "com.github.johnrengelman.shadow").versionRef(shadow)

            def architecturyPlugin = version("architectury", architecturyPluginVersion)
            plugin("architectury", "architectury-plugin").versionRef(architecturyPlugin)

            def architecturyLoom = version("architectury-loom", architecturyLoomVersion)
            plugin("architectury-loom", "dev.architectury.loom").versionRef(architecturyLoom)

            def vineFlower = version("vineFlower", vineFlowerVersion)
            plugin("vineFlower", "io.github.juuxel.loom-vineflower").versionRef(vineFlower)

            def machete = version("machete", macheteVersion)
            plugin("machete", "io.github.p03w.machete").versionRef(machete)
        }
    }
}

rootProject.name = 'ExtraSoundsNext'

include 'common'
include 'fabric'
include 'neoforge'
